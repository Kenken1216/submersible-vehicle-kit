from machine import I2C
import time

LPS33_ADDR = 0x5D
LPS33_PRESS_OUT_XL = 0x28 | 0x80  # auto-increment flag
LPS33_TEMP_OUT_L = 0x2B | 0x80
LPS33_CTRL_REG1 = 0x10

class LPS33:
    def __init__(self, i2c, address=LPS33_ADDR):
        self.i2c = i2c
        self.addr = address

        # Proper config for LPS33HW: BDU=1, ODR=1Hz, LPF=enabled
        # 0b10110000 = 0xB0
        self.i2c.writeto_mem(self.addr, LPS33_CTRL_REG1, b'\xB0')

        time.sleep(0.1)  # Let it settle

        self.read_all()  # Discard first pressure/temp reading



    def read_all(self):
        # Read 5 bytes starting from pressure register
        raw = self.i2c.readfrom_mem(self.addr, LPS33_PRESS_OUT_XL, 5)

        # Pressure: 3 bytes (24-bit signed)
        p = raw[0] | (raw[1] << 8) | (raw[2] << 16)
        if p & 0x800000:  # sign bit
            p -= 1 << 24
        pressure = p / 4096.0  # hPa

        # Temperature: 2 bytes (16-bit signed)
        t = raw[3] | (raw[4] << 8)
        if t & 0x8000:
            t -= 1 << 16
        temperature = t / 100.0  # Â°C

        return pressure, temperature